import java.util.ArrayList;
import java.util.List;

public class BlockingQueueImplementation {
	
	private List<String> blockingQueue ;
	private int capacity ;
	
	
	public BlockingQueueImplementation(int capacity) {
		this.capacity=capacity ;
		blockingQueue = new ArrayList<>(); //This can act as the first in first out manner
		
	}
	
	
	public void enQue(String data) throws InterruptedException{
		
		while(blockingQueue.size() == capacity){
			wait(); // so the calling thread will wait till the blocking queue is free and release the lock on the object
		}
		if(blockingQueue.size()==0){
			notifyAll();
		}
		
		this.blockingQueue.add(data);
		
	}
	
	
	public String deQueue() throws InterruptedException{
		while(blockingQueue.size() ==0){
			wait();
		}
		if(blockingQueue.size()==capacity){
			notifyAll();
		}
		return this.blockingQueue.remove(0);
	}
	

}
